version: '3'

services:
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '-config.file=/etc/prometheus/prometheus.yaml'
      - '-storage.local.path=/prometheus'
      - '-alertmanager.url=http://alertmanager:9093'
      - '-web.console.libraries=/usr/share/prometheus/console_libraries'
      - '-web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    depends_on:
      - cadvisor
      - chronix-ingester
    networks:
      - backend
    restart: always


  pushgateway:
    image: prom/pushgateway
    ports:
      - 9091:9091
    networks:
      - backend
    restart: always


  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc
      - /sys:/host/sys
      - /:/rootfs
      - /etc/hostname:/etc/host_hostname
    ports:
      - 9100:9100
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'
    restart: always
    networks:
      - backend
    deploy:
      mode: global


  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - backend
    restart: always
    command:
      - '-config.file=/etc/alertmanager/config.yaml'
      - '-storage.path=/alertmanager'
    deploy:
      mode: global


  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - 8000:8080
    networks:
      - backend
    restart: always
    deploy:
      mode: global


  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/:/etc/grafana/
      - ./grafana-plugins/:/var/lib/grafana/plugins/
    networks:
      - backend
      - frontend
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=DevOps_2017
      - GF_USERS_ALLOW_SIGN_UP=false

  chronix:
    build:
      context: ./chronix
      dockerfile: Dockerfile
    ports:
      - 9094:8983
    networks:
      - backend
    restart: always

  chronix-ingester:
    build:
      context: ./chronix
      dockerfile: Dockerfile.ingestor
    ports:
      - 9095:8080
    networks:
      - backend
    depends_on:
      - chronix
    restart: always

  housekeeping:
    build:
      context: ./housekeeping
      dockerfile: Dockerfile
    networks:
      - frontend
    depends_on:
      - grafana


volumes:
  grafana_data: {}
  prometheus_data: {}

networks:
  backend:
  frontend:
